# Generated by Django 5.2.2 on 2025-09-09 17:49

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfiguracionSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre descriptivo de la configuración', max_length=100, unique=True, verbose_name='Nombre de configuración')),
                ('ip_camara', models.GenericIPAddressField(default='172.16.1.21', help_text='Dirección IP de la cámara GigE', verbose_name='IP de la cámara')),
                ('umbral_confianza', models.FloatField(default=0.55, help_text='Umbral mínimo de confianza para detecciones (0.0 - 1.0)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Umbral de confianza')),
                ('umbral_iou', models.FloatField(default=0.35, help_text='Umbral IoU para supresión de no máximos (0.0 - 1.0)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Umbral IoU')),
                ('configuracion_robustez', models.CharField(choices=[('original', 'Original - Alta precisión'), ('moderada', 'Moderada - Balanceada'), ('permisiva', 'Permisiva - Alta sensibilidad'), ('ultra_permisiva', 'Ultra Permisiva - Condiciones extremas')], default='original', help_text='Configuración de robustez del sistema', max_length=20, verbose_name='Configuración de robustez')),
                ('activa', models.BooleanField(default=False, help_text='Indica si esta es la configuración activa del sistema', verbose_name='Configuración activa')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('creada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='configuraciones_creadas', to=settings.AUTH_USER_MODEL, verbose_name='Creada por')),
            ],
            options={
                'verbose_name': 'Configuración del Sistema',
                'verbose_name_plural': 'Configuraciones del Sistema',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='AnalisisCople',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_analisis', models.CharField(help_text='Identificador único del análisis', max_length=50, unique=True, verbose_name='ID de análisis')),
                ('timestamp_captura', models.DateTimeField(help_text='Momento en que se capturó la imagen', verbose_name='Timestamp de captura')),
                ('timestamp_procesamiento', models.DateTimeField(auto_now_add=True, help_text='Momento en que se procesó el análisis', verbose_name='Timestamp de procesamiento')),
                ('tipo_analisis', models.CharField(choices=[('completo', 'Análisis Completo'), ('clasificacion', 'Solo Clasificación'), ('deteccion_piezas', 'Solo Detección de Piezas'), ('deteccion_defectos', 'Solo Detección de Defectos'), ('segmentacion_defectos', 'Solo Segmentación de Defectos'), ('segmentacion_piezas', 'Solo Segmentación de Piezas')], default='completo', max_length=30, verbose_name='Tipo de análisis')),
                ('estado', models.CharField(choices=[('procesando', 'Procesando'), ('completado', 'Completado'), ('error', 'Error')], default='procesando', max_length=20, verbose_name='Estado')),
                ('archivo_imagen', models.CharField(help_text='Nombre del archivo de imagen generado', max_length=255, verbose_name='Archivo de imagen')),
                ('archivo_json', models.CharField(help_text='Nombre del archivo JSON con metadatos', max_length=255, verbose_name='Archivo JSON')),
                ('resolucion_ancho', models.IntegerField(verbose_name='Ancho de imagen')),
                ('resolucion_alto', models.IntegerField(verbose_name='Alto de imagen')),
                ('resolucion_canales', models.IntegerField(verbose_name='Canales de imagen')),
                ('tiempo_captura_ms', models.FloatField(verbose_name='Tiempo de captura (ms)')),
                ('tiempo_clasificacion_ms', models.FloatField(verbose_name='Tiempo de clasificación (ms)')),
                ('tiempo_deteccion_piezas_ms', models.FloatField(verbose_name='Tiempo de detección piezas (ms)')),
                ('tiempo_deteccion_defectos_ms', models.FloatField(verbose_name='Tiempo de detección defectos (ms)')),
                ('tiempo_segmentacion_defectos_ms', models.FloatField(verbose_name='Tiempo de segmentación defectos (ms)')),
                ('tiempo_segmentacion_piezas_ms', models.FloatField(verbose_name='Tiempo de segmentación piezas (ms)')),
                ('tiempo_total_ms', models.FloatField(verbose_name='Tiempo total (ms)')),
                ('metadatos_json', models.JSONField(default=dict, help_text='Metadatos completos del análisis en formato JSON', verbose_name='Metadatos JSON')),
                ('mensaje_error', models.TextField(blank=True, help_text='Mensaje de error si el análisis falló', verbose_name='Mensaje de error')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analisis_realizados', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
                ('configuracion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analisis_realizados', to='analisis_coples.configuracionsistema', verbose_name='Configuración utilizada')),
            ],
            options={
                'verbose_name': 'Análisis de Cople',
                'verbose_name_plural': 'Análisis de Coples',
                'ordering': ['-timestamp_procesamiento'],
                'indexes': [models.Index(fields=['timestamp_procesamiento'], name='analisis_co_timesta_8de737_idx'), models.Index(fields=['estado'], name='analisis_co_estado_85481a_idx'), models.Index(fields=['tipo_analisis'], name='analisis_co_tipo_an_f0c1a7_idx'), models.Index(fields=['usuario'], name='analisis_co_usuario_1deb70_idx')],
            },
        ),
    ]
