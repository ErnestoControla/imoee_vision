# Generated by Django 5.2.2 on 2025-09-09 17:49

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('analisis_coples', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EstadisticasSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(help_text='Fecha de las estadísticas', unique=True, verbose_name='Fecha')),
                ('total_analisis', models.IntegerField(default=0, help_text='Número total de análisis realizados', verbose_name='Total de análisis')),
                ('analisis_exitosos', models.IntegerField(default=0, help_text='Número de análisis completados exitosamente', verbose_name='Análisis exitosos')),
                ('analisis_con_error', models.IntegerField(default=0, help_text='Número de análisis que fallaron', verbose_name='Análisis con error')),
                ('total_aceptados', models.IntegerField(default=0, help_text='Número total de coples clasificados como aceptados', verbose_name='Total aceptados')),
                ('total_rechazados', models.IntegerField(default=0, help_text='Número total de coples clasificados como rechazados', verbose_name='Total rechazados')),
                ('tiempo_promedio_captura_ms', models.FloatField(default=0.0, verbose_name='Tiempo promedio captura (ms)')),
                ('tiempo_promedio_clasificacion_ms', models.FloatField(default=0.0, verbose_name='Tiempo promedio clasificación (ms)')),
                ('tiempo_promedio_total_ms', models.FloatField(default=0.0, verbose_name='Tiempo promedio total (ms)')),
                ('confianza_promedio', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Confianza promedio')),
            ],
            options={
                'verbose_name': 'Estadísticas del Sistema',
                'verbose_name_plural': 'Estadísticas del Sistema',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='DeteccionDefecto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clase', models.CharField(help_text='Clase del defecto detectado', max_length=50, verbose_name='Clase')),
                ('confianza', models.FloatField(help_text='Confianza de la detección (0.0 - 1.0)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Confianza')),
                ('bbox_x1', models.IntegerField(verbose_name='BBox X1')),
                ('bbox_y1', models.IntegerField(verbose_name='BBox Y1')),
                ('bbox_x2', models.IntegerField(verbose_name='BBox X2')),
                ('bbox_y2', models.IntegerField(verbose_name='BBox Y2')),
                ('centroide_x', models.IntegerField(verbose_name='Centroide X')),
                ('centroide_y', models.IntegerField(verbose_name='Centroide Y')),
                ('area', models.IntegerField(help_text='Área en píxeles', verbose_name='Área')),
                ('analisis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detecciones_defectos', to='analisis_coples.analisiscople', verbose_name='Análisis')),
            ],
            options={
                'verbose_name': 'Detección de Defecto',
                'verbose_name_plural': 'Detecciones de Defectos',
                'ordering': ['-confianza'],
            },
        ),
        migrations.CreateModel(
            name='DeteccionPieza',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clase', models.CharField(help_text='Clase de la pieza detectada', max_length=50, verbose_name='Clase')),
                ('confianza', models.FloatField(help_text='Confianza de la detección (0.0 - 1.0)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Confianza')),
                ('bbox_x1', models.IntegerField(verbose_name='BBox X1')),
                ('bbox_y1', models.IntegerField(verbose_name='BBox Y1')),
                ('bbox_x2', models.IntegerField(verbose_name='BBox X2')),
                ('bbox_y2', models.IntegerField(verbose_name='BBox Y2')),
                ('centroide_x', models.IntegerField(verbose_name='Centroide X')),
                ('centroide_y', models.IntegerField(verbose_name='Centroide Y')),
                ('area', models.IntegerField(help_text='Área en píxeles', verbose_name='Área')),
                ('analisis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detecciones_piezas', to='analisis_coples.analisiscople', verbose_name='Análisis')),
            ],
            options={
                'verbose_name': 'Detección de Pieza',
                'verbose_name_plural': 'Detecciones de Piezas',
                'ordering': ['-confianza'],
            },
        ),
        migrations.CreateModel(
            name='ResultadoClasificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clase_predicha', models.CharField(help_text='Clase predicha por el modelo (Aceptado/Rechazado)', max_length=50, verbose_name='Clase predicha')),
                ('confianza', models.FloatField(help_text='Nivel de confianza de la predicción (0.0 - 1.0)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Confianza')),
                ('tiempo_inferencia_ms', models.FloatField(help_text='Tiempo que tardó la inferencia en milisegundos', verbose_name='Tiempo de inferencia (ms)')),
                ('analisis', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resultado_clasificacion', to='analisis_coples.analisiscople', verbose_name='Análisis')),
            ],
            options={
                'verbose_name': 'Resultado de Clasificación',
                'verbose_name_plural': 'Resultados de Clasificación',
            },
        ),
        migrations.CreateModel(
            name='SegmentacionDefecto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clase', models.CharField(help_text='Clase del defecto segmentado', max_length=50, verbose_name='Clase')),
                ('confianza', models.FloatField(help_text='Confianza de la segmentación (0.0 - 1.0)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Confianza')),
                ('bbox_x1', models.IntegerField(verbose_name='BBox X1')),
                ('bbox_y1', models.IntegerField(verbose_name='BBox Y1')),
                ('bbox_x2', models.IntegerField(verbose_name='BBox X2')),
                ('bbox_y2', models.IntegerField(verbose_name='BBox Y2')),
                ('centroide_x', models.IntegerField(verbose_name='Centroide X')),
                ('centroide_y', models.IntegerField(verbose_name='Centroide Y')),
                ('area_mascara', models.IntegerField(help_text='Área en píxeles', verbose_name='Área de máscara')),
                ('coeficientes_mascara', models.JSONField(help_text='Coeficientes de la máscara de segmentación', verbose_name='Coeficientes de máscara')),
                ('analisis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segmentaciones_defectos', to='analisis_coples.analisiscople', verbose_name='Análisis')),
            ],
            options={
                'verbose_name': 'Segmentación de Defecto',
                'verbose_name_plural': 'Segmentaciones de Defectos',
                'ordering': ['-confianza'],
            },
        ),
        migrations.CreateModel(
            name='SegmentacionPieza',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clase', models.CharField(help_text='Clase de la pieza segmentada', max_length=50, verbose_name='Clase')),
                ('confianza', models.FloatField(help_text='Confianza de la segmentación (0.0 - 1.0)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Confianza')),
                ('bbox_x1', models.IntegerField(verbose_name='BBox X1')),
                ('bbox_y1', models.IntegerField(verbose_name='BBox Y1')),
                ('bbox_x2', models.IntegerField(verbose_name='BBox X2')),
                ('bbox_y2', models.IntegerField(verbose_name='BBox Y2')),
                ('centroide_x', models.IntegerField(verbose_name='Centroide X')),
                ('centroide_y', models.IntegerField(verbose_name='Centroide Y')),
                ('area_mascara', models.IntegerField(help_text='Área en píxeles', verbose_name='Área de máscara')),
                ('ancho_mascara', models.IntegerField(verbose_name='Ancho de máscara')),
                ('alto_mascara', models.IntegerField(verbose_name='Alto de máscara')),
                ('coeficientes_mascara', models.JSONField(help_text='Coeficientes de la máscara de segmentación', verbose_name='Coeficientes de máscara')),
                ('analisis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segmentaciones_piezas', to='analisis_coples.analisiscople', verbose_name='Análisis')),
            ],
            options={
                'verbose_name': 'Segmentación de Pieza',
                'verbose_name_plural': 'Segmentaciones de Piezas',
                'ordering': ['-confianza'],
            },
        ),
    ]
